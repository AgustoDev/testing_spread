{
  "version": 3,
  "sources": ["<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/index.tsx", "../../app/components/spread/spread.tsx", "../../app/helpers/cookie-store.ts", "../../app/modules/data.ts", "../../app/modules/spread/spread.controller.ts", "../../app/components/spread/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport { renderToString } from 'react-dom/server';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n", "import type { MetaFunction } from '@remix-run/node';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport styles from './styles/app.css';\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }];\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import Spread from '~/components/spread';\n\nexport const loader = () => {\n  return { spreadData: [], company: { name: 'Agusto Test', slug: 'agusto_test' } };\n};\n\nexport type CompanyLoader = ReturnType<typeof loader>;\n\nexport default function Index() {\n  return (\n    <div className=\"flex gap-6 p-10\">\n      <Spread />\n    </div>\n  );\n}\n", "/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport cookieStorage from '~/helpers/cookie-store';\r\nimport { spreadCompute, spreadFormatting } from '~/modules/spread/spread.controller';\r\nimport type { CompanyLoader } from '~/routes';\r\n\r\nconst Spread = () => {\r\n  const itemsRef = useRef<any>([]);\r\n  const [newYears, setNewYears] = useState<any>([]);\r\n  const { spreadData, company } = useLoaderData() as CompanyLoader;\r\n  const [rawData, setRawData] = useState<any[][]>([]);\r\n  const [updateRawData, setUpdateRawData] = useState<any>(spreadData);\r\n  const [spread, setSpread] = useState<CompanyData[][]>([]);\r\n  const [keys, setKeys] = useState<string[]>([]);\r\n  const [years, setYears] = useState<number[]>([]);\r\n  const [isFocused, setIsFocused] = useState<string>('');\r\n\r\n  const addNewYear = () => {\r\n    let yearsUsed = rawData.map((item) => item[0].year);\r\n    //add new year to the end of the array base highest year else add 2018\r\n    let newYear = yearsUsed.length > 0 ? Math.max(...yearsUsed) + 1 : 2018;\r\n    setNewYears([newYear]);\r\n  };\r\n\r\n  const clearData = () => {\r\n    cookieStorage.removeItem(company.slug);\r\n    window.location.reload();\r\n  };\r\n\r\n  const updateSpread = (data: CompanyData[][]) => {\r\n    let formattedData: any = spreadFormatting(data);\r\n    let tableKeys = formattedData.map((item: CompanyData[]) => ({ title: item[0].title, class: item[0].class }));\r\n    let allYears = formattedData[0].map((item: CompanyData) => item.year);\r\n\r\n    setNewYears([]);\r\n    setYears(allYears);\r\n    setKeys(tableKeys);\r\n    setSpread(formattedData);\r\n    setRawData(data);\r\n    cookieStorage.setItem(company.slug, JSON.stringify(data));\r\n  };\r\n\r\n  const runCalc = () => {\r\n    if (rawData.length === 0 && !newYears) return;\r\n    let result = spreadCompute({ newYears, rawData: updateRawData?.length > 0 ? updateRawData : rawData });\r\n    if (result) updateSpread(result);\r\n  };\r\n\r\n  //on focus change the value of cell to input\r\n  const onFocus = (refIndex: string) => {\r\n    setIsFocused(refIndex);\r\n  };\r\n\r\n  //on blur update company data\r\n  const onBlur = ({ refIndex, item }: { refIndex: string; item: CompanyData }) => {\r\n    setIsFocused('');\r\n    const { current } = itemsRef;\r\n    const currentRef = current[refIndex];\r\n    const { year, title } = item;\r\n\r\n    if (currentRef) {\r\n      let yearIndex = rawData.findIndex((item) => item[0].year === year);\r\n      let titleIndex = rawData[yearIndex].findIndex((item) => item.title === title);\r\n      let newData = rawData;\r\n      newData[yearIndex][titleIndex].input = currentRef?.textContent || '0';\r\n      setUpdateRawData(newData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rawData.length === 0 || !rawData) return;\r\n    runCalc();\r\n  }, [updateRawData]);\r\n\r\n  useEffect(() => {\r\n    if (newYears.length === 0 || !newYears) return;\r\n    runCalc();\r\n  }, [newYears]);\r\n\r\n  useEffect(() => {\r\n    if (spreadData.length === 0) {\r\n      let data: any = cookieStorage.getItem(company.slug);\r\n      if (data) {\r\n        data = JSON.parse(data);\r\n        setRawData(data);\r\n        setUpdateRawData(data);\r\n      }\r\n    }\r\n  }, [spreadData]);\r\n\r\n  return (\r\n    <div className=\"w-full \">\r\n      <div className=\"flex items-center gap-4\">\r\n        <button className=\"p-3 mb-4 text-xs text-white uppercase bg-green-700 rounded \" onClick={addNewYear}>\r\n          Add New Year\r\n        </button>\r\n\r\n        <button className=\"p-3 mb-4 text-xs text-white uppercase bg-red-700 rounded \" onClick={clearData}>\r\n          reset data\r\n        </button>\r\n      </div>\r\n\r\n      <table className=\"w-full uppercase \">\r\n        <thead>\r\n          <tr className=\"\">\r\n            <th className=\"w-full p-3 text-left border-l-2\">Year</th>\r\n            {years.map((item, i) => (\r\n              <th key={i} className=\"p-3 border-l-2\">\r\n                {item}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n\r\n        {\r\n          <tbody>\r\n            {keys.map((el: any, i) => (\r\n              <tr key={i} className={`${el.class}`}>\r\n                <td className=\"p-3 text-left border-l-2 \">{el.title}</td>\r\n                {spread[i].map((item, ii) => {\r\n                  let refIndex = `${item.slug}${item.year}`;\r\n                  return (\r\n                    <td\r\n                      ref={(el) => (itemsRef.current[refIndex] = el)}\r\n                      key={ii}\r\n                      onFocus={(e) => onFocus(refIndex)}\r\n                      onBlur={(e) => onBlur({ refIndex, item })}\r\n                      contentEditable={item?.isInput}\r\n                      suppressContentEditableWarning={true}\r\n                      className={`${item.class} p-3 text-center min-w-[10vw]`}\r\n                    >\r\n                      {isFocused === refIndex ? item?.input : item?.value}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        }\r\n      </table>\r\n\r\n      <div className=\"mt-20\">\r\n        <h2 className=\"font-bold uppercase\">NOTE:</h2>\r\n\r\n        <li>\r\n          <span className=\"font-bold\">1. </span> To add new year click on the{' '}\r\n          <span className=\"font-bold uppercase\">Add New Year (min 2018)</span>{' '}\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"font-bold\">2. </span> To reset data click on the{' '}\r\n          <span className=\"font-bold uppercase\">reset data</span>{' '}\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"font-bold\">3. </span> To edit data click on the cell and edit the value\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"font-bold\">4. </span> To save data click outside the cell (Just like excel)\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"font-bold\">5. </span> You can also use expression <br />\r\n          <span className=\"block mt-4 font-bold uppercase\">eg:</span>\r\n          <span className=\"block mt-1\">1. 100 + 200 </span>\r\n          <span className=\"block mt-1\">2. 100 - 200 </span>\r\n          <span className=\"block mt-1\">3. 100 * 200 </span>\r\n          <span className=\"block mt-1\">4. 100 / 200 </span>\r\n        </li>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spread;\r\n", "import Cookies from 'js-cookie';\r\n\r\nconst setItem = (key: string, value: any) => {\r\n  Cookies.set(key, value);\r\n  return true;\r\n};\r\n\r\nconst getItem = (key: string) => {\r\n  return Cookies.get(key);\r\n};\r\n\r\nconst removeItem = async (key: string) => {\r\n  Cookies.remove(key);\r\n  return true;\r\n};\r\n\r\nconst cookieStorage = {\r\n  setItem,\r\n  getItem,\r\n  removeItem,\r\n};\r\n\r\nexport default cookieStorage;\r\n", "const spreadDataMap = [\r\n  {\r\n    title: 'Revenue',\r\n    isInput: true,\r\n    slug: 'revenue',\r\n    class: 'default',\r\n  },\r\n  {\r\n    title: 'Cost of Goods Sold',\r\n    isInput: true,\r\n    slug: 'cost_of_goods_sold',\r\n    class: 'default',\r\n  },\r\n  {\r\n    title: 'Gross Profit c/f',\r\n    isInput: false,\r\n    slug: 'gross_profit',\r\n    formula: '$($revenue$-$cost_of_goods_sold$)$+$gross_profit@1',\r\n    class: 'totals',\r\n  },\r\n];\r\n\r\nexport default spreadDataMap;\r\n", "import spreadDataMap from '../data';\r\nimport numeral from 'numeral';\r\nimport * as math from 'mathjs';\r\n\r\nexport const spreadCompute = ({ newYears, rawData }: { newYears?: number[] | null | undefined; rawData: any }) => {\r\n  let spread: CompanyData[][] = rawData;\r\n  const spreadData: Record<string, any> = {};\r\n  let spreadDataObject: Record<string, any> = {};\r\n\r\n  //loop through the years and create a new spreadData object using year as keys and spreadDataMap as values\r\n  if (newYears) {\r\n    newYears.forEach((year) => {\r\n      spreadData[year] = spreadDataMap.map((item: any) => {\r\n        return {\r\n          ...item,\r\n          year,\r\n          formula: item?.formula || null,\r\n          input: item.input || '0',\r\n          value: item?.formula ? '0' : item.value || '0',\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  if (rawData) {\r\n    rawData.forEach((year: any) => {\r\n      spreadData[year[0].year] = year;\r\n    });\r\n  }\r\n\r\n  //sort spreadData year object by year from smallest to largest\r\n  const years = Object.keys(spreadData).sort((a, b) => Number(a) - Number(b));\r\n\r\n  years.forEach((el) => {\r\n    const x = flattenArrayToObject(spreadData[el]);\r\n    spreadDataObject[el] = x;\r\n  });\r\n  spread = computeSpread(years, spreadData, spreadDataObject);\r\n\r\n  //sort  array of arrays by year from largest to\r\n  spread.sort((a: any, b: any) => b[0].year - a[0].year);\r\n\r\n  return spread;\r\n};\r\n\r\nconst flattenArrayToObject = (array: any) => {\r\n  let x: any | null = {};\r\n\r\n  array.forEach((item: CompanyData) => {\r\n    let key = item.slug;\r\n    x[key] = item?.formula || validateInput(item.input);\r\n  });\r\n  return x;\r\n};\r\n\r\nconst validateInput = (input: any) => {\r\n  return `${math.evaluate(input)}`;\r\n};\r\n\r\nconst computeSpread = (years: string[], spreadData: any, spreadDataObject: any) => {\r\n  const result: any[] = [];\r\n  let kk: Record<string, any> = spreadDataObject;\r\n\r\n  years.sort((a, b) => Number(a) - Number(b));\r\n  years.forEach((year: any) => {\r\n    let items = spreadData[year];\r\n    let arr: any = [];\r\n\r\n    items.forEach((item: any) => {\r\n      if (item.formula) kk[year][item.slug] = item.formula ? computeFormula(year, item.formula, kk) : item?.input || 0;\r\n\r\n      let kkValue = kk[year][item.slug];\r\n      let value = numeral(kkValue).format('0,000.00') || 0;\r\n      let obj = { ...item, value };\r\n      arr.push(obj);\r\n    });\r\n    result.push(arr);\r\n  });\r\n  return result;\r\n};\r\n\r\nconst computeFormula = (year: number, formula: string, spreadDataObject: any) => {\r\n  const identifier = '$';\r\n  let result = 0;\r\n  let splitFormula: any = formula.split(identifier);\r\n  splitFormula = splitFormula.filter((el: any) => el !== '');\r\n\r\n  splitFormula.forEach((el: any, index: number) => {\r\n    let data: any = '';\r\n    if (el.includes('@')) {\r\n      const checkYear = year - el.split('@')[1];\r\n      data = spreadDataObject[checkYear]?.[el.split('@')[0]] || 0;\r\n    }\r\n    if (data !== '') splitFormula[index] = numeral(data).value();\r\n  });\r\n\r\n  splitFormula = splitFormula.join().replace(/,/g, '');\r\n  result = math.evaluate(splitFormula, spreadDataObject[year]);\r\n  return result;\r\n};\r\n\r\nexport const spreadFormatting = (spread: CompanyData[][]) => {\r\n  const titles = spread[0].map((year: any) => year.title);\r\n  return titles.map((title: any) => {\r\n    return spread.map((year) => year.find((item) => item.title === title));\r\n  });\r\n};\r\n", "import Spread from './spread';\r\n\r\nexport default Spread;\r\n", "export default {'version':'244f61fc','entry':{'module':'/build/entry.client-JFLMTQEP.js','imports':['/build/_shared/chunk-LYAC43W4.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-T6NDFEEW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4NK2SUOY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-244F61FC.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_react", "Cookies", "numeral", "import_jsx_dev_runtime", "item", "el", "spread_default", "import_jsx_dev_runtime", "spread_default"]
}
